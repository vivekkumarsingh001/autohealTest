package common;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.PDPageTree;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject;

import java.awt.Color;
import java.io.File;
import java.nio.file.Paths;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

public class AddLogoToPdf {
	private static String path = System.getProperty("user.dir");
	public static String projectName = CommonUtil.GetXMLData(
			Paths.get(path.toString(), "src", "test", "java", "ApplicationSettings.xml").toString(), "ProjectName");
	public static String UserName = CommonUtil.GetXMLData(
			Paths.get(path.toString(), "src", "test", "java", "ApplicationSettings.xml").toString(), "UserName");

	public static void addLogoToPdf() {
		String projectPath = System.getProperty("user.dir");
		String latestfoldername = common.LatestFolderFinder.GetLatestFolderName(projectPath + "/output");
		String pdfFilePath = projectPath + "\\output\\" + latestfoldername
				+ "\\ExtentReports\\PdfReport\\ExtentPdf.pdf";
		String leftLogoFilePath = projectPath + "\\src\\test\\resources\\logo1.png";
		String rightLogoFilePath = projectPath + "\\src\\test\\resources\\logo2.png";
		String outputFilePath = projectPath + "\\output\\" + latestfoldername
				+ "\\ExtentReports\\PdfReport\\ExtentPdf.pdf";

		try (PDDocument document = PDDocument.load(new File(pdfFilePath))) {
			PDRectangle a3Size = new PDRectangle(PDRectangle.A3.getWidth(), PDRectangle.A3.getHeight() / 2);
			PDPage newPage = new PDPage(a3Size);
			PDPageTree pages = document.getDocumentCatalog().getPages();
			pages.insertBefore(newPage, pages.get(0));

			// Load both logos
			PDImageXObject leftLogo = PDImageXObject.createFromFile(leftLogoFilePath, document);
			PDImageXObject rightLogo = PDImageXObject.createFromFile(rightLogoFilePath, document);

			try (PDPageContentStream contentStream = new PDPageContentStream(document, newPage)) {
				contentStream.drawImage(leftLogo, 40, a3Size.getHeight() - 120, 200, 70);
				contentStream.drawImage(rightLogo, a3Size.getWidth() - 300, a3Size.getHeight() - 120, 250, 70);
				contentStream.setNonStrokingColor(Color.BLACK);

				// Define text content
				String text1 = "TEST AUTOMATION REPORT";
				String text2 = "For " + projectName;
				String text3 = "Powered by algoQA";
				String text4 = "Report Generated By: " + UserName;
				LocalDate currentDate = LocalDate.now();
				DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MMMM-yyyy");
				String text5 = "Report Generated date: " + currentDate.format(formatter);

				// Define font
				PDType1Font font = PDType1Font.HELVETICA_BOLD;

				// Calculate the start positions to center the text
				float fontSize = 22;
				float textWidth = font.getStringWidth(text1) / 1000 * fontSize;
				float startX = (a3Size.getWidth() - textWidth) / 2;
				float startY = a3Size.getHeight() - 250;

				contentStream.beginText();
				contentStream.setFont(font, fontSize);
				contentStream.newLineAtOffset(startX, startY);
				contentStream.showText(text1);
				contentStream.endText();

				fontSize = 20;
				textWidth = font.getStringWidth(text2) / 1000 * fontSize;
				startX = (a3Size.getWidth() - textWidth) / 2;
				startY -= 32;

				contentStream.beginText();
				contentStream.setFont(font, fontSize);
				contentStream.newLineAtOffset(startX, startY);
				contentStream.showText(text2);
				contentStream.endText();

				fontSize = 12;
				textWidth = font.getStringWidth(text3) / 1000 * fontSize;
				startX = (a3Size.getWidth() - textWidth) / 2;
				startY -= 22;

				contentStream.beginText();
				contentStream.setFont(font, fontSize);
				contentStream.newLineAtOffset(startX, startY);
				contentStream.showText(text3);
				contentStream.endText();

				fontSize = 18;
				textWidth = font.getStringWidth(text4) / 1000 * fontSize;
				startX = (a3Size.getWidth() - textWidth) / 2;
				startY -= 35;

				contentStream.beginText();
				contentStream.setFont(font, fontSize);
				contentStream.newLineAtOffset(startX, startY);
				contentStream.showText(text4);
				contentStream.endText();

				textWidth = font.getStringWidth(text5) / 1000 * fontSize;
				startX = (a3Size.getWidth() - textWidth) / 2;
				startY -= 35;

				contentStream.beginText();
				contentStream.setFont(font, fontSize);
				contentStream.newLineAtOffset(startX, startY);
				contentStream.showText(text5);
				contentStream.endText();
			}
			document.save(outputFilePath);
			System.out.println("New page with logos added at the beginning and file saved as: " + outputFilePath);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
